front 
프론트와 프론트 개발자 
브라우저에서 하는 일들은 모두 프론트 

"서버 개발자가 던져주는 데이터를 받아서 그려주는 장소"

물리적 서버가 아닌 클라우드 형태의 서버의 개념은?

sql과 php의 개념은?

방문자수(트래픽)과 서버 규모,관리의 관계는 어떻게



back 



--
head 
유저 트래킹과 같은 부분이 들어간다. 
meta 태그는 링크를 공유할 때 보여주는 정보가 들어간다(site 를 나타내는 정보)

외부 css, java 코드 링크 걸기 

input 태그는 받는 정보의 성격이 다르다. 
<input type="text"/>
비밀번호같은 경우는 안보이게 해야 되고

나이 같은 경우는 한글이나 영어가 아닌 숫자만 적어야 하는 등 

---
css

id 값은 하나만 가질 수 있고 class는 여러 값을 가질 수 있다.

id를 부를때는 #을 이용. 겹칠 수 없다. 
class를 부를때는 .을 이용 


inline style 방식 : 태그에 직접 스타일을 입히는 방식 


상하관계를 나타낼때는 

.f-1 > .f-2 를 사용 : 부모>자식 
또는 ">"가 없이 띄어쓰기만으로도 상하관계 구분 가능  

wrap width는 안의 컨텐츠 내용의 width와 일치시킴

가운데 정렬이 아닌 경우에는 display : flex를 사용하지 않나?

반응형의 경우는 어떻게?

bootstrap / materialize
>bootstrap의 input 항목은  forms 항목에 있다. 

클라이언트 또한 서버로 어떤 정보를 보내줘야하는데
이때 html의 form 태그를 사용 > 사이트 refresh됨

a  태그의href 사용시 "#!" 느낌표 사용시 클릭해도 리프레시 되지 않는다.

-----
기획자 디자인
>
퍼블리싱/퍼블리셔(html,css)
>
프론트 개발자에게 전달 (데이터와 바인딩) - 보통 퍼블리셔가 같이 함 
>
백엔드 개발자
>
QA
-------
bootstrap의 프레임워크를 사용할 때 부모-자식간의 관계가 바뀌면
예상치 못한 css 특성이 발현될 수 있다.

보통 mvp를 빠르게 개발하고 다시 디자인하는 경우가 많다. 


